<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/aop/ 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
     http://www.springframework.org/schema/beans             
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd         
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.0.xsd          
     http://www.springframework.org/schema/aop         
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
<!--  if use xml file then this should be enabled   if u use config class by using annotation then no need use xml file-->
<!--  if you use annotation  aop:aspectj-autoproxy is used   if use xml no need of using aop  -->
	<!--  <aop:aspectj-autoproxy />  -->






	<!-- <aop:config>
		<aop:aspect ref="loggingAspect">
			<aop:pointcut
				expression="execution(* com.aop.EmployeeManager.*(..))"
				id="loggingPointcuts" />
			after advice
			<aop:around method="logAroundGetEmployee"
				pointcut-ref="loggingPointcuts" />
		</aop:aspect>
	</aop:config>
 -->
 
 
 
 <!--  if use xml file then this should be enabled   if u use config class by using annotation then no need use xml file-->
            <!--if you use annotation  then we have to use  -->
       <!--  <context:component-scan base-package="com.aop,com.aop.aopconfig"></context:component-scan>  -->
        
        
        
        
	<!-- Employee manager -->
	<!-- <bean id="employeeManager" class="com.aop.EmployeeManager" />
 -->
	<!-- Logging Aspect -->


	<!-- <bean id="loggingAspect" class="com.aop.config.EmployeeCRUDAspect" /> -->



</beans>